<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.5</version>
        <relativePath/>
    </parent>
    <groupId>tech.antoniosgarbi</groupId>
    <artifactId>desafio-api</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>desafio-api</name>
    <description>desafio-api</description>

    <properties>
        <java.version>17</java.version>
        <spring-cloud.version>2021.0.5</spring-cloud.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>

        <sonar.organization>antoniosgarbi</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>3.18.1</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.6.12</version>
        </dependency>

        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite-engine</artifactId>
            <version>1.8.2</version>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>1.18.24</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version>
                <configuration>
                    <excludes>
                        <exclude>**/*Principal.*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <from>
                        <image>eclipse-temurin:17-jre-alpine</image>
                    </from>
                    <to>
                        <image>antoniosk/historico-de-noticias-e-etiquetas</image>
                        <tags>
                            <tag>${project.version}</tag>
                            <tag>latest</tag>
                        </tags>
                        <auth>
                            <username>${env.DOCKERHUB_USERNAME}</username>
                            <password>${env.DOCKERHUB_TOKEN}</password>
                        </auth>
                    </to>
                    <container>
                        <ports>
                            <port>8080</port>
                        </ports>
                        <environment>
                            <GENERATE_ADM_EMAIL>adm-email</GENERATE_ADM_EMAIL>
                            <GENERATE_ADM_PASSWORD>adm-pass</GENERATE_ADM_PASSWORD>

                            <GENERATE_USER_EMAIL>user-email</GENERATE_USER_EMAIL>
                            <GENERATE_USER_PASSWORD>user-pass</GENERATE_USER_PASSWORD>

                            <DB_HOST>localhost</DB_HOST>
                            <DB_PORT>3306</DB_PORT>
                            <DB_NAME>desafio-api</DB_NAME>
                            <DB_USER>root</DB_USER>
                            <DB_PASSWORD>root</DB_PASSWORD>

                            <MAIL_HOST>smtp-mail.outlook.com</MAIL_HOST>
                            <MAIL_PORT>587</MAIL_PORT>
                            <MAIL_PROTOCOL>smtp</MAIL_PROTOCOL>
                            <MAIL_USERNAME>username</MAIL_USERNAME>
                            <MAIL_PASSWORD>password</MAIL_PASSWORD>

                            <TOKEN_ISSUER>desafio-api</TOKEN_ISSUER>
                            <JWT_ACCESS_SECRET>my_access_secret</JWT_ACCESS_SECRET>
                            <JWT_ACCESS_EXPIRATION_TIME>1800000</JWT_ACCESS_EXPIRATION_TIME>
                            <JWT_REFRESH_SECRET>my_refresh_secret</JWT_REFRESH_SECRET>
                            <JWT_REFRESH_EXPIRATION_TIME>86400000</JWT_REFRESH_EXPIRATION_TIME>
                        </environment>
                        <args>
                            <arg>--generate.adm.email=${GENERATE_ADM_EMAIL}</arg>
                            <arg>--generate.adm.password=${GENERATE_ADM_PASSWORD}</arg>
                            <arg>--generate.user.email=${GENERATE_USER_EMAIL}</arg>
                            <arg>--generate.user.password=${GENERATE_USER_PASSWORD}</arg>

                            <arg>--spring.datasource.username=${DB_USER}</arg>
                            <arg>--spring.datasource.password=${DB_PASSWORD}</arg>
                            <arg>--spring.datasource.url=jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?createDatabaseIfNotExist=True&amp;jdbcCompliantTruncation=false</arg>

                            <arg>--spring.mail.host=${MAIL_HOST}</arg>
                            <arg>--spring.mail.port=${MAIL_PORT}</arg>
                            <arg>--spring.mail.protocol=${MAIL_PROTOCOL}</arg>
                            <arg>--spring.mail.username=${MAIL_USERNAME}</arg>
                            <arg>--spring.mail.password=${MAIL_PASSWORD}</arg>

                            <arg>--security.token.issuer=${TOKEN_ISSUER}</arg>
                            <arg>--security.token.access_secret=${JWT_ACCESS_SECRET}</arg>
                            <arg>--security.token.access_expiration=${JWT_ACCESS_EXPIRATION_TIME}</arg>
                            <arg>--security.token.refresh_secret=${JWT_REFRESH_SECRET}</arg>
                            <arg>--security.token.refresh_expiration=${JWT_REFRESH_EXPIRATION_TIME}</arg>

                            <arg>--security.url-cors=${URL_CORS}</arg>
                        </args>
                    </container>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
